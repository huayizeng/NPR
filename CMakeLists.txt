cmake_minimum_required(VERSION 3.0)
project(base)
message("Into code/base")
message( ${CMAKE_ROOT})
message( ${CMAKE_SOURCE_DIR})
message("--------------")

set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)

find_package(OpenCV 3.1.0 REQUIRED)
find_package(Boost COMPONENTS system filesystem REQUIRED)
find_package(Ceres REQUIRED)
find_package(OpenGL REQUIRED)
find_package(GLUT REQUIRED)

add_library(base_image_process image_process.h image_process.cc)
add_library(base_mesh mesh.h mesh.cc)
add_library(base_lidar lidar.h lidar.cc)
add_library(base_cad cad.h cad.cc)
add_library(base_house house.h house.cc)
add_library(base_optimize optimize_new.h optimize_new.cc)

target_link_libraries(base_lidar base_image_process)
target_link_libraries(base_lidar ${OpenCV_LIBS})
target_link_libraries(base_cad ${OpenCV_LIBS})
target_link_libraries(base_cad base_mesh)
target_link_libraries(base_house ${OpenCV_LIBS})
target_link_libraries(base_house base_lidar)
target_link_libraries(base_house base_cad)
target_link_libraries(base_optimize base_house)

include_directories(${CERES_INCLUDE_DIRS})
target_link_libraries(base_optimize ${CERES_LIBRARIES})

find_package(Protobuf 2.6.0 REQUIRED)
protobuf_generate_cpp(features_dnn.pb.cc features_dnn.pb.h features_dnn.proto)
add_library(base_features_proto features_dnn.pb.cc features_dnn.pb.h)
target_link_libraries(base_features_proto ${PROTOBUF_LIBRARY})
target_link_libraries(base_house base_features_proto)
target_link_libraries(base_cad base_features_proto)

include_directories(${Boost_INCLUDE_DIRS})
target_link_libraries(base_lidar ${Boost_FILESYSTEM_LIBRARY} ${Boost_SYSTEM_LIBRARY})

option(ENABLE_HDF5 "Enable HDF5 support" ON)
if(ENABLE_HDF5)
    find_package(HDF5 1.10.0 REQUIRED)
    if(HDF5_FOUND)
        include_directories(${HDF5_INCLUDE_DIR})
        set(_hdf5_libs hdf5 hdf5_cpp)
    endif()
endif()

if(ENABLE_HDF5)
target_link_libraries(base_lidar ${_hdf5_libs})
endif()